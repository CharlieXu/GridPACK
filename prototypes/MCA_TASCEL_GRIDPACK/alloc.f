!--------------------- SUBROUTINE -----------------

      SUBROUTINE ALLOC

!    WRITETEN BY YOUSU CHEN, PNNL, 28 MARCH 2007
!    LAST MODIFIED BY YOUSU CHEN, PNNL, 06 JUNE 2007
!    $ID: ALLOC.F, V1.03 2007/6/06
!     
! -------- DESCRIPTION --------     
!     ALLOCATE MEMORY FOR ALL ARRAY VARIABLES 
! -----------------------------------------------
!
!     REVISION LOG
!     2007/04/20
!     ADDED JACOBI AND SUPERLU MODULE
!     2007/06/06
!     (1) ADDED CAMODULE
!     (2) ADDED VALYBUSSAVE ARRAYS FOR CONTINGENCY ANALYSIS
!     2007/06/14
!     (1) ADDED PFSAVE,QFSAVE,PTSAVE,QTSAVE ARRAYS FOR CONTINGENCY ANALYSIS
!     2007/06/15
!     (1) ADDED SBUSSAVE ARRAY FOR CONTINGENCY ANALYSIS
!     2007/08/23
!     (1) ADDED GEN_STATUS1,GEN_STATUS2 FOR N-2,N-3 CONTINGENCY ANALYSIS
!     2008/02/18
!     (1) REMOVED GEN_STATUS1,GEN_STATUS2

      USE ALLMODULE
      USE JACOBI
      USE SUPERLU
      USE MPI
      
      
!     DEALLOCATE ARRAY IF ALREADY ALLOCATED

!     BUS ARRAYS

      IF (ALLOCATED(BUS_I)) DEALLOCATE(BUS_I)
      IF (ALLOCATED(BUS_I_SAVE)) DEALLOCATE(BUS_I_SAVE)
      IF (ALLOCATED(BUS_AREA)) DEALLOCATE(BUS_AREA)
      IF (ALLOCATED(ZONE)) DEALLOCATE(ZONE)
      IF (ALLOCATED(BUS_TYPE)) DEALLOCATE(BUS_TYPE)
      IF (ALLOCATED(VM)) DEALLOCATE(VM)
      IF (ALLOCATED(VMHIGH)) DEALLOCATE(VMHIGH)
      IF (ALLOCATED(VMLOW)) DEALLOCATE(VMLOW)
      IF (ALLOCATED(VA)) DEALLOCATE(VA)
      IF (ALLOCATED(VMSAVE)) DEALLOCATE(VMSAVE)
      IF (ALLOCATED(VASAVE)) DEALLOCATE(VASAVE)
      IF (ALLOCATED(PD)) DEALLOCATE(PD)
      IF (ALLOCATED(QD)) DEALLOCATE(QD)
      IF (ALLOCATED(BASE_KV)) DEALLOCATE(BASE_KV)
      IF (ALLOCATED(VMAX)) DEALLOCATE(VMAX)
      IF (ALLOCATED(VMIN)) DEALLOCATE(VMIN)
      IF (ALLOCATED(GS)) DEALLOCATE(GS)
      IF (ALLOCATED(BS)) DEALLOCATE(BS)
      IF (ALLOCATED(BUSNAME)) DEALLOCATE(BUSNAME) 
      
!     GENERATOR ARRAYS      

      IF (ALLOCATED(GEN_BUS)) DEALLOCATE(GEN_BUS)
      IF (ALLOCATED(GEN_STATUS)) DEALLOCATE(GEN_STATUS)
      IF (ALLOCATED(GEN_STATUS_SAVE)) DEALLOCATE(GEN_STATUS_SAVE)
      IF (ALLOCATED(PG)) DEALLOCATE(PG)
      IF (ALLOCATED(QG)) DEALLOCATE(QG)
      IF (ALLOCATED(QMAX)) DEALLOCATE(QMAX)
      IF (ALLOCATED(QMIN)) DEALLOCATE(QMIN)
      IF (ALLOCATED(VG)) DEALLOCATE(VG)
      IF (ALLOCATED(MBASE)) DEALLOCATE(MBASE)
      IF (ALLOCATED(PMAX)) DEALLOCATE(PMAX)
      IF (ALLOCATED(PMIN)) DEALLOCATE(PMIN)
      IF (ALLOCATED(G_ID)) DEALLOCATE(G_ID)
      IF (ALLOCATED(GEN_ID)) DEALLOCATE(GEN_ID)
      IF (ALLOCATED(GEN_ID2)) DEALLOCATE(GEN_ID2)
      
!     BRANCH ARRAYS      

      IF (ALLOCATED(F_BUS)) DEALLOCATE(F_BUS)
      IF (ALLOCATED(F_BUS_SAVE)) DEALLOCATE(F_BUS_SAVE)
      IF (ALLOCATED(T_BUS_SAVE)) DEALLOCATE(T_BUS_SAVE)
      IF (ALLOCATED(T_BUS)) DEALLOCATE(T_BUS)
      IF (ALLOCATED(BR_R)) DEALLOCATE(BR_R)
      IF (ALLOCATED(BR_X)) DEALLOCATE(BR_X)
      IF (ALLOCATED(BR_R)) DEALLOCATE(BR_R)
      IF (ALLOCATED(RATE_A)) DEALLOCATE(RATE_A)
      IF (ALLOCATED(RATE_B)) DEALLOCATE(RATE_B)
      IF (ALLOCATED(RATE_C)) DEALLOCATE(RATE_C)
      IF (ALLOCATED(TAP)) DEALLOCATE(TAP)
      IF (ALLOCATED(SHIFT)) DEALLOCATE(SHIFT)
      IF (ALLOCATED(BR_STATUS)) DEALLOCATE(BR_STATUS)
      IF (ALLOCATED(BR_STATUS_SAVE)) DEALLOCATE(BR_STATUS_SAVE)
      IF (ALLOCATED(BR_ID)) DEALLOCATE(BR_ID)
      IF (ALLOCATED(BR_ID2)) DEALLOCATE(BR_ID2)
      IF (ALLOCATED(MVAHIGH)) DEALLOCATE(MVAHIGH)
      
!     ALLOCATE YBUS RELATED ARRAYS

      IF(ALLOCATED(VALYBUS)) DEALLOCATE(VALYBUS)
      IF(ALLOCATED(VALYBUS)) DEALLOCATE(VALYBUSSAVE)
      IF(ALLOCATED(IROWYBUS)) DEALLOCATE(IROWYBUS)
      IF(ALLOCATED(ICOLYBUS)) DEALLOCATE(ICOLYBUS)
      IF(ALLOCATED(VALYF)) DEALLOCATE(VALYF)
      IF(ALLOCATED(IROWYF)) DEALLOCATE(IROWYF)
      IF(ALLOCATED(ICOLYF)) DEALLOCATE(ICOLYF)
      IF(ALLOCATED(VALYT)) DEALLOCATE(VALYT)
      IF(ALLOCATED(IROWYT)) DEALLOCATE(IROWYT)
      IF(ALLOCATED(ICOLYT)) DEALLOCATE(ICOLYT)
      IF(ALLOCATED(VALG)) DEALLOCATE(VALG)
      IF(ALLOCATED(IROWG)) DEALLOCATE(IROWG)
      IF(ALLOCATED(ICOLG)) DEALLOCATE(ICOLG)

      
!     OTHER ARRAYS      

      IF (ALLOCATED(I2E)) DEALLOCATE(I2E)
      IF (ALLOCATED(E2I)) DEALLOCATE(E2I)
      IF (ALLOCATED(V0)) DEALLOCATE(V0)
      IF (ALLOCATED(V0SAVE)) DEALLOCATE(V0SAVE)
      IF (ALLOCATED(V)) DEALLOCATE(V)      
      IF (ALLOCATED(SBUS)) DEALLOCATE(SBUS)      
      IF (ALLOCATED(SBUSSAVE)) DEALLOCATE(SBUSSAVE)      
      IF (ALLOCATED(PGP)) DEALLOCATE(PGP)      
      IF (ALLOCATED(QGP)) DEALLOCATE(QGP)      
      IF (ALLOCATED(TAP_CPLX)) DEALLOCATE(TAP_CPLX)      
      IF (ALLOCATED(LOSS)) DEALLOCATE(LOSS)      
      IF (ALLOCATED(SG)) DEALLOCATE(SG)      
      IF (ALLOCATED(SF)) DEALLOCATE(SF)      
      IF (ALLOCATED(ST)) DEALLOCATE(ST)      
      IF (ALLOCATED(R)) DEALLOCATE(R)      
      IF (ALLOCATED(R1)) DEALLOCATE(R1)      
      IF (ALLOCATED(R2)) DEALLOCATE(R2)      

!     JACOBI ARRAYS      

      IF (ALLOCATED(IROW12)) DEALLOCATE(IROW12)
      IF (ALLOCATED(IROW34)) DEALLOCATE(IROW34)
      IF (ALLOCATED(IROWJ)) DEALLOCATE(IROWJ)
      IF (ALLOCATED(ICOL12)) DEALLOCATE(ICOL12)
      IF (ALLOCATED(ICOL34)) DEALLOCATE(ICOL34)
      IF (ALLOCATED(ICOLJ)) DEALLOCATE(ICOLJ)
      IF (ALLOCATED(VAL12)) DEALLOCATE(VAL12)
      IF (ALLOCATED(VAL34)) DEALLOCATE(VAL34)
!      IF (ALLOCATED(VALJ)) DEALLOCATE(VALJ)

!     SUPERLU ARRAYS      

      IF (ALLOCATED(ROWIND)) DEALLOCATE(ROWIND)
      IF (ALLOCATED(COLPTR)) DEALLOCATE(COLPTR)
      IF (ALLOCATED(VALUES)) DEALLOCATE(VALUES)
!     
!     CA ARRAYS
      IF(ALLOCATED(IROWCA)) DEALLOCATE(IROWCA)

!     CASE_BUFF BUFF_A ARRAYS
      IF(ALLOCATED(CASE_BUFF)) DEALLOCATE(CASE_BUFF)
!      IF(ALLOCATED(BUFF_A)) DEALLOCATE(BUFF_A)



!     TIME ARRAYS
!      IF(ALLOCATED(TIME)) DEALLOCATE(TIME)
!     ALLOCATE BUS ARRAYS

      ALLOCATE(BUS_I(NB),BUS_AREA(NB),ZONE(NB),BUS_TYPE(NB),VM(NB),
     & VA(NB),PD(NB),QD(NB),BASE_KV(NB),VMAX(NB),VMIN(NB),GS(NB),
     & BS(NB),VMSAVE(NB),VASAVE(NB),BUSNAME(NB),VMHIGH(NB),VMLOW(NB),
     & BUS_I_SAVE(NB),
     & STAT=ERROR)  
      IF (ERROR /=0) THEN
       PRINT *, " ------------------ ERROR ------------------------" 
       PRINT *, " PROGRAM COULD NOT ALLOCATE SPACE FOR BUS ARRAYS" 
       STOP
      END IF       

!     ALLOCATE GENERATOR ARRAYS

      ALLOCATE(GEN_BUS(NG),GEN_STATUS(NG),PG(NG),QG(NG),QMAX(NG),
     & QMIN(NG),VG(NG),MBASE(NG),PMAX (NG),PMIN(NG),GEN_ID(NG),
C     & MU_PMAX(NG),MU_PMIN(NG),MU_QMAX(NG),MU_QMIN(NG),  ! FOR FUTURE USE
     & GEN_ID2(NG),GEN_STATUS_SAVE(NG), STAT=ERROR)
      IF (ERROR /=0) THEN
       PRINT *, " ------------------ ERROR ------------------------" 
       PRINT *, " PROGRAM COULD NOT ALLOCATE SPACE FOR GENERATOR ARRAYS" 
       STOP
      END IF       

!     ALLOCATE BRANCH ARRAYS

      ALLOCATE(F_BUS(NBRCH),T_BUS(NBRCH),BR_STATUS(NBRCH),BR_R(NBRCH),
     & BR_X(NBRCH),BR_B(NBRCH),RATE_A(NBRCH),RATE_B(NBRCH),RATE_C(NBRCH)
     & ,TAP(NBRCH),SHIFT(NBRCH),PF(NBRCH),QF(NBRCH),PT(NBRCH),QT(NBRCH),
     & PFSAVE(NBRCH),QFSAVE(NBRCH),PTSAVE(NBRCH),QTSAVE(NBRCH),
     & BR_ID(NBRCH),BR_ID2(NBRCH),MVAHIGH(NBRCH),! MU_SF(NBRCH),MU_ST(NBRCH), !FOR FUTURE
     & F_BUS_SAVE(NBRCH),T_BUS_SAVE(NBRCH),BR_STATUS_SAVE(NBRCH),
     & STAT=ERROR)
      IF (ERROR /=0) THEN
       PRINT *, " ------------------ ERROR ------------------------" 
       PRINT *, " PROGRAM COULD NOT ALLOCATE SPACE FOR BRANCH ARRAYS" 
       STOP
      END IF      

!     ALLOCATE YBUS ARRAYS

      ALLOCATE(VALYBUS(7*NBRCH),VALYBUSSAVE(7*NBRCH),IROWYBUS(NB+1),
     &  ICOLYBUS(7*NBRCH),
     &  IROWYF(NBRCH+1),ICOLYF(7*NBRCH),VALYF(7*NBRCH),IROWYT(NBRCH+1)
     &  ,ICOLYT(7*NBRCH),VALYT(7*NBRCH),IROWG(NG+1),ICOLG(2*NBRCH),
     &  VALG(2*NBRCH),STAT=ERROR)
      IF (ERROR /=0) THEN
        PRINT *, " ------------------ ERROR ------------------------" 
        PRINT *, " PROGRAM COULD NOT ALLOCATE SPACE FOR YBUS RELATED 
     &  ARRAYS" 
        STOP
      END IF       
      
!     ALLOCATE OTHER ARRAYS

      ALLOCATE(V0(NB),I2E(NB),E2I(100000),V(NB),SBUS(NB),SBUSSAVE(NB)
     &    ,PGP(NB),QGP(NB),SG(NG),SF(NBRCH),ST(NBRCH),R(NB),R1(NBRCH)
     &    ,R2(NBRCH),TAP_CPLX(NBRCH),LOSS(NBRCH),V0SAVE(NB),STAT=ERROR)
      IF (ERROR /=0) THEN
       PRINT *, " ------------------ ERROR ------------------------" 
       PRINT *, " PROGRAM COULD NOT ALLOCATE SPACE FOR OTHER ARRAYS" 
       STOP
      END IF       
     
!     ALLOCATE JACOBI ARRAYS

      ALLOCATE(IROW12(NB),IROW34(NB),IROWJ(2*NB),ICOL12(40*NBRCH),
     &    ICOL34(40*NBRCH),ICOLJ(80*NBRCH),VAL12(40*NBRCH),
     &    VAL34(40*NBRCH),STAT=ERROR)  
!     &    VAL34(40*NBRCH),VALJ(80*NBRCH),STAT=ERROR)  
      IF (ERROR /=0) THEN
       PRINT *, " ------------------ ERROR ------------------------" 
       PRINT *, " PROGRAM COULD NOT ALLOCATE SPACE FOR JACOBI ARRAYS" 
       STOP
      END IF       
     
!     ALLOCATE SUPERLU ARRAYS

      ALLOCATE(COLPTR(2*NB),ROWIND(80*NBRCH),VALUES(80*NBRCH),
     & STAT=ERROR)  
      IF (ERROR /=0) THEN
       PRINT *, " ------------------ ERROR ------------------------" 
       PRINT *, " PROGRAM COULD NOT ALLOCATE SPACE FOR SUPERLU ARRAYS" 
       STOP
      END IF       
     
!     ALLOCATE CA ARRAYS

      ALLOCATE(IROWCA(NB+1),STAT=ERROR)  
      IF (ERROR /=0) THEN
       PRINT *, " ------------------ ERROR ------------------------" 
       PRINT *, " PROGRAM COULD NOT ALLOCATE SPACE FOR CA ARRAYS" 
       STOP
      END IF       
      RETURN

!     ALLOCATE TIME ARRAYS

!      ALLOCATE(TIME(NPROC),STAT=ERROR)  
!      IF (ERROR /=0) THEN
!       PRINT *, " ------------------ ERROR ------------------------" 
!       PRINT *, " PROGRAM COULD NOT ALLOCATE SPACE FOR TIME ARRAYS" 
!       STOP
!      END IF   
      RETURN
                 
!     ALLOCATE CASE_BUFF BUFF_A ARRAYS

!      ALLOCATE(CASE_BUFF(16+NB*10+(NBRCH-1)*10+100), STAT=ERROR) 
!     &         BUFF_A(16+NB*10+(NBRCH-1)*10),STAT=ERROR)  
!      ALLOCATE(SINGLE_OUTPUT(4), STAT=ERROR) 
!      ALLOCATE(SINGLE_OUTPUT(2*NB+4), STAT=ERROR) 
      IF (ERROR /=0) THEN
       PRINT *, " ------------------ ERROR ------------------------" 
       PRINT *, " COULD NOT ALLOCATE SPACE FOR SINGLE_OUTPUT ARRAYS" 
       STOP
      END IF       
      RETURN
      END
